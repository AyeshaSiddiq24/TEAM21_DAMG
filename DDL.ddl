-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-11-07 13:43:26 EST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

-- Dropping tables in the correct order to resolve dependencies
DROP TABLE fine_payment CASCADE CONSTRAINTS;
DROP TABLE fine_due CASCADE CONSTRAINTS;
DROP TABLE book_issue CASCADE CONSTRAINTS;
DROP TABLE location CASCADE CONSTRAINTS;
DROP TABLE lib_staff CASCADE CONSTRAINTS;
DROP TABLE member CASCADE CONSTRAINTS;
DROP TABLE author CASCADE CONSTRAINTS;
DROP TABLE book CASCADE CONSTRAINTS;
DROP TABLE category CASCADE CONSTRAINTS;
DROP TABLE publisher CASCADE CONSTRAINTS;


CREATE TABLE author (
    author_id    VARCHAR2(50) NOT NULL,
    first_name   VARCHAR2(50),
    last_name    VARCHAR2(50),
    book_book_id VARCHAR2(50) NOT NULL
);

ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_id );

CREATE TABLE book (
    book_id                VARCHAR2(50) NOT NULL,
    book_title             VARCHAR2(50),
    category_id            VARCHAR2(50),
    publisher_id           VARCHAR2(50),
    publication_year       VARCHAR2(50),
    book_edition           VARCHAR2(50),
    copies_total           VARCHAR2(50),
    copies_available       VARCHAR2(50),
    location_id            VARCHAR2(50),
    category_category_id   VARCHAR2(50) NOT NULL,
    publisher_publisher_id VARCHAR2(50) NOT NULL,
    location_location_id   VARCHAR2(50) NOT NULL
);

CREATE UNIQUE INDEX book__idx ON
    book (
        location_location_id
    ASC );

ALTER TABLE book ADD CONSTRAINT book_pk PRIMARY KEY ( book_id );

CREATE TABLE book_issue (
    issue_id               VARCHAR2(50) NOT NULL,
    book_id                VARCHAR2(50),
    member_id              VARCHAR2(50),
    issue_date             VARCHAR2(50),
    return_date            VARCHAR2(50),
    issue_status           VARCHAR2(50),
    issued_by_id           VARCHAR2(50),
--  ERROR: Datatype UNKNOWN is not allowed 

    member_member_id       VARCHAR2(50) NOT NULL,
    book_book_id           VARCHAR2(50) NOT NULL,
    lib_staff_issued_by_id VARCHAR2(50) NOT NULL
);

ALTER TABLE book_issue ADD CONSTRAINT book_issue_pk PRIMARY KEY ( issue_id );

CREATE TABLE category (
    category_id   VARCHAR2(50) NOT NULL,
    category_name VARCHAR2(50)
);

ALTER TABLE category ADD CONSTRAINT category_pk PRIMARY KEY ( category_id );

CREATE TABLE fine_due (
    fine_id                      VARCHAR2(50) NOT NULL,
    member_id                    VARCHAR2(50),
    issue_id                     VARCHAR2(50),
    fine_date                    VARCHAR2(50),
    fine_total                   VARCHAR2(50),
    member_member_id             VARCHAR2(50) NOT NULL,
    fine_payment_fine_payment_id VARCHAR2(50) NOT NULL
);

CREATE UNIQUE INDEX fine_due__idx ON
    fine_due (
        fine_payment_fine_payment_id
    ASC );

ALTER TABLE fine_due ADD CONSTRAINT fine_due_pk PRIMARY KEY ( fine_id );

CREATE TABLE fine_payment (
    fine_payment_id  VARCHAR2(50) NOT NULL,
    member_id        VARCHAR2(50),
    payment_date     DATE,
    payment_amount   VARCHAR2(50),
    issue_id         VARCHAR2(50),
    member_member_id VARCHAR2(50) NOT NULL,
    fine_due_fine_id VARCHAR2(50) NOT NULL
);

CREATE UNIQUE INDEX fine_payment__idx ON
    fine_payment (
        fine_due_fine_id
    ASC );

ALTER TABLE fine_payment ADD CONSTRAINT fine_payment_pk PRIMARY KEY ( fine_payment_id );

CREATE TABLE lib_staff (
    issued_by_id      VARCHAR2(50) NOT NULL,
    staff_name        VARCHAR2(50),
    staff_designation VARCHAR2(50)
);

ALTER TABLE lib_staff ADD CONSTRAINT lib_staff_pk PRIMARY KEY ( issued_by_id );

CREATE TABLE location (
    location_id  VARCHAR2(50) NOT NULL,
    shelf_no     VARCHAR2(50),
    shelf_name   VARCHAR2(50),
    book_book_id VARCHAR2(50) NOT NULL
);

CREATE UNIQUE INDEX location__idx ON
    location (
        book_book_id
    ASC );

ALTER TABLE location ADD CONSTRAINT location_pk PRIMARY KEY ( location_id );

CREATE TABLE member (
    member_id             VARCHAR2(50) NOT NULL,
    first_name            VARCHAR2(50),
    last_name             VARCHAR2(50),
    city                  VARCHAR2(50),
    mobile_no             VARCHAR2(50),
    email_id              VARCHAR2(50),
    date_of_birth         DATE,
    active_status_id      VARCHAR2(50),
    account_type          VARCHAR2(50),
    account_status        VARCHAR2(50),
    membership_start_date DATE,
    membership_end_date   DATE
);

ALTER TABLE member ADD CONSTRAINT member_pk PRIMARY KEY ( member_id );

CREATE TABLE publisher (
    publisher_id         VARCHAR2(50) NOT NULL,
    publisher_name       VARCHAR2(50) NOT NULL,
    publication_language VARCHAR2(50),
    publication_type     VARCHAR2(50)
);

ALTER TABLE publisher ADD CONSTRAINT publisher_pk PRIMARY KEY ( publisher_id );

ALTER TABLE author
    ADD CONSTRAINT author_book_fk FOREIGN KEY ( book_book_id )
        REFERENCES book ( book_id );

ALTER TABLE book
    ADD CONSTRAINT book_category_fk FOREIGN KEY ( category_category_id )
        REFERENCES category ( category_id );

ALTER TABLE book_issue
    ADD CONSTRAINT book_issue_book_fk FOREIGN KEY ( book_book_id )
        REFERENCES book ( book_id );

ALTER TABLE book_issue
    ADD CONSTRAINT book_issue_lib_staff_fk FOREIGN KEY ( lib_staff_issued_by_id )
        REFERENCES lib_staff ( issued_by_id );

ALTER TABLE book_issue
    ADD CONSTRAINT book_issue_member_fk FOREIGN KEY ( member_member_id )
        REFERENCES member ( member_id );

ALTER TABLE book
    ADD CONSTRAINT book_location_fk FOREIGN KEY ( location_location_id )
        REFERENCES location ( location_id );

ALTER TABLE book
    ADD CONSTRAINT book_publisher_fk FOREIGN KEY ( publisher_publisher_id )
        REFERENCES publisher ( publisher_id );

ALTER TABLE fine_due
    ADD CONSTRAINT fine_due_fine_payment_fk FOREIGN KEY ( fine_payment_fine_payment_id )
        REFERENCES fine_payment ( fine_payment_id );

ALTER TABLE fine_due
    ADD CONSTRAINT fine_due_member_fk FOREIGN KEY ( member_member_id )
        REFERENCES member ( member_id );

ALTER TABLE fine_payment
    ADD CONSTRAINT fine_payment_fine_due_fk FOREIGN KEY ( fine_due_fine_id )
        REFERENCES fine_due ( fine_id );

ALTER TABLE fine_payment
    ADD CONSTRAINT fine_payment_member_fk FOREIGN KEY ( member_member_id )
        REFERENCES member ( member_id );

ALTER TABLE location
    ADD CONSTRAINT location_book_fk FOREIGN KEY ( book_book_id )
        REFERENCES book ( book_id );

CREATE OR REPLACE TRIGGER fkntm_fine_due BEFORE
    UPDATE OF fine_payment_fine_payment_id ON fine_due
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table fine_due is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_location BEFORE
    UPDATE OF book_book_id ON location
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table location is violated');
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             4
-- ALTER TABLE                             22
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0



