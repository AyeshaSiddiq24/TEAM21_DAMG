DECLARE
    user_exists NUMBER;
BEGIN
    -- Check if the user exists
    SELECT COUNT(*)
    INTO user_exists
    FROM all_users
    WHERE username = 'LIB_STAFF_USER';

    -- If the user exists, drop it
    IF user_exists > 0 THEN
        EXECUTE IMMEDIATE 'DROP USER LIB_STAFF_USER CASCADE';
        DBMS_OUTPUT.PUT_LINE('Existing user LIB_STAFF_USER dropped successfully.');
    END IF;

    -- Create the LIB_STAFF_USER
    EXECUTE IMMEDIATE 'CREATE USER LIB_STAFF_USER IDENTIFIED BY "#Staff2024@Library"';

    -- Grant basic system privileges
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO LIB_STAFF_USER';

    -- Grant SELECT on tables to allow browsing of library data
    EXECUTE IMMEDIATE 'GRANT SELECT ON CATEGORY TO LIB_STAFF_USER';
    EXECUTE IMMEDIATE 'GRANT SELECT ON PUBLISHER TO LIB_STAFF_USER';
    EXECUTE IMMEDIATE 'GRANT SELECT ON MEMBER TO LIB_STAFF_USER';
    EXECUTE IMMEDIATE 'GRANT SELECT ON BOOK TO LIB_STAFF_USER';
    EXECUTE IMMEDIATE 'GRANT SELECT ON FINE_DUE TO LIB_STAFF_USER';
    EXECUTE IMMEDIATE 'GRANT SELECT ON FINE_PAYMENT TO LIB_STAFF_USER';
    EXECUTE IMMEDIATE 'GRANT SELECT ON LIB_STAFF TO LIB_STAFF_USER';
    EXECUTE IMMEDIATE 'GRANT SELECT ON BOOK_ISSUE TO LIB_STAFF_USER';

    -- Grant INSERT, UPDATE, DELETE privileges for operational tables
    EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON BOOK_ISSUE TO LIB_STAFF_USER';
    EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON FINE_DUE TO LIB_STAFF_USER';
    EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON FINE_PAYMENT TO LIB_STAFF_USER';

    DBMS_OUTPUT.PUT_LINE('User LIB_STAFF_USER created and granted the specified privileges successfully.');

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END;
/
