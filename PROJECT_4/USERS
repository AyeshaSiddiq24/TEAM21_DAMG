-- Drop and Create LIBRARY_ADMIN_USER
SET SERVEROUTPUT ON;
DECLARE
  user_exists NUMBER;
BEGIN
  SELECT COUNT(*) INTO user_exists FROM all_users WHERE username = 'LIBRARY_ADMIN_USER';
  IF user_exists > 0 THEN
    EXECUTE IMMEDIATE 'DROP USER LIBRARY_ADMIN_USER CASCADE';
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_ADMIN_USER dropped successfully.');
  ELSE
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_ADMIN_USER does not exist.');
  END IF;
END;
/

CREATE USER LIBRARY_ADMIN_USER IDENTIFIED BY "SecureLibraryAdmin@2024" DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
GRANT CREATE SESSION, CREATE VIEW, CREATE PROCEDURE, CREATE SEQUENCE, CREATE TABLE, CREATE USER, DROP USER TO LIBRARY_ADMIN_USER WITH ADMIN OPTION;
COMMIT;

-- Drop and Create LIBRARY_STAFF_USER
SET SERVEROUTPUT ON;
DECLARE
  user_exists NUMBER;
BEGIN
  SELECT COUNT(*) INTO user_exists FROM all_users WHERE username = 'LIBRARY_STAFF_USER';
  IF user_exists > 0 THEN
    EXECUTE IMMEDIATE 'DROP USER LIBRARY_STAFF_USER CASCADE';
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_STAFF_USER dropped successfully.');
  ELSE
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_STAFF_USER does not exist.');
  END IF;
END;
/

CREATE USER LIBRARY_STAFF_USER IDENTIFIED BY "SecureLibraryStaff@2024" DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
GRANT CREATE SESSION, CREATE VIEW TO LIBRARY_STAFF_USER;
COMMIT;

-- Drop and Create LIBRARY_MEMBER_USER
SET SERVEROUTPUT ON;
DECLARE
  user_exists NUMBER;
BEGIN
  SELECT COUNT(*) INTO user_exists FROM all_users WHERE username = 'LIBRARY_MEMBER_USER';
  IF user_exists > 0 THEN
    EXECUTE IMMEDIATE 'DROP USER LIBRARY_MEMBER_USER CASCADE';
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_MEMBER_USER dropped successfully.');
  ELSE
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_MEMBER_USER does not exist.');
  END IF;
END;
/

CREATE USER LIBRARY_MEMBER_USER IDENTIFIED BY "SecureLibraryMember@2024" DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
GRANT CREATE SESSION TO LIBRARY_MEMBER_USER;
COMMIT;

-- Drop and Create LIBRARY_FINANCE_USER
SET SERVEROUTPUT ON;
DECLARE
  user_exists NUMBER;
BEGIN
  SELECT COUNT(*) INTO user_exists FROM all_users WHERE username = 'LIBRARY_FINANCE_USER';
  IF user_exists > 0 THEN
    EXECUTE IMMEDIATE 'DROP USER LIBRARY_FINANCE_USER CASCADE';
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_FINANCE_USER dropped successfully.');
  ELSE
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_FINANCE_USER does not exist.');
  END IF;
END;
/

CREATE USER LIBRARY_FINANCE_USER IDENTIFIED BY "SecureLibraryFinance@2024" DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
GRANT CREATE SESSION TO LIBRARY_FINANCE_USER;
COMMIT;

-- Drop and Create LIBRARY_ANALYST_USER
SET SERVEROUTPUT ON;
DECLARE
  user_exists NUMBER;
BEGIN
  SELECT COUNT(*) INTO user_exists FROM all_users WHERE username = 'LIBRARY_ANALYST_USER';
  IF user_exists > 0 THEN
    EXECUTE IMMEDIATE 'DROP USER LIBRARY_ANALYST_USER CASCADE';
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_ANALYST_USER dropped successfully.');
  ELSE
    DBMS_OUTPUT.PUT_LINE('User LIBRARY_ANALYST_USER does not exist.');
  END IF;
END;
/

CREATE USER LIBRARY_ANALYST_USER IDENTIFIED BY "SecureLibraryAnalyst@2024" DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
GRANT CREATE SESSION TO LIBRARY_ANALYST_USER;
COMMIT;
