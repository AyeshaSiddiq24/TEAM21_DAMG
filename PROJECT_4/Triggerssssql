--Trigger 1: Update Book Inventory After an Issue
CREATE OR REPLACE TRIGGER Update_Book_Inventory_After_Issue
AFTER INSERT ON Book_Issue
FOR EACH ROW
DECLARE
    v_copies_available NUMBER;
BEGIN
    -- Fetch current available copies for the book
    SELECT Copies_available 
    INTO v_copies_available 
    FROM Book 
    WHERE Book_id = :NEW.Book_id;

    -- Check if sufficient copies are available
    IF v_copies_available < 1 THEN
        RAISE_APPLICATION_ERROR(-30001, 'No copies of the book are available for issue.');
    END IF;

    -- Update the book inventory
    UPDATE Book
    SET Copies_available = Copies_available - 1
    WHERE Book_id = :NEW.Book_id;
END;
/

--Trigger 2: Prevent Out-of-Stock Books from Being Issued
CREATE OR REPLACE TRIGGER Prevent_Out_Of_Stock_Books
BEFORE INSERT ON BOOK_ISSUE
FOR EACH ROW
DECLARE
    v_copies_available NUMBER;
BEGIN
    -- Fetch current available copies for the book
    SELECT Copies_available 
    INTO v_copies_available 
    FROM BOOK 
    WHERE Book_id = :NEW.Book_id;

    -- Ensure at least one copy is available
    IF v_copies_available < 1 THEN
        RAISE_APPLICATION_ERROR(-20002, 'This book is out of stock and cannot be issued.');
    END IF;
END;
/


--Trigger 3: Prevent Duplicate Book Titles
CREATE OR REPLACE TRIGGER Prevent_Duplicate_Books
BEFORE INSERT OR UPDATE ON BOOK
FOR EACH ROW
DECLARE
    v_count NUMBER;
BEGIN
    -- Check for duplicate book titles
    SELECT COUNT(*) 
    INTO v_count 
    FROM BOOK 
    WHERE LOWER(Book_title) = LOWER(:NEW.Book_title)
      AND Category_id = :NEW.Category_id
      AND Publisher_id = :NEW.Publisher_id;

    -- Raise an error if duplicates are found
    IF v_count > 0 THEN
        RAISE_APPLICATION_ERROR(-40004, 'Duplicate book titles are not allowed under the same category and publisher.');
    END IF;
END;
/

--Trigger 4:Prevent Negative Book Copies
CREATE OR REPLACE TRIGGER Prevent_Negative_Book_Copies
BEFORE UPDATE OF Copies_available ON BOOK
FOR EACH ROW
BEGIN
    -- Ensure the new number of available copies is not negative
    IF :NEW.Copies_available < 0 THEN
        RAISE_APPLICATION_ERROR(-20003, 'Number of available copies cannot be negative.');
    END IF;
END;
/

